---
import Header from "../components/Header.astro";
import Footer from "../components/Footer.astro";
import { ViewTransitions } from "astro:transitions";
import Main from "../components/Main.astro";

interface Props {
  title?: string;
  description?: string;
  image?: string;
  headerIndex?: boolean;
}

const { title, description, headerIndex } = Astro.props;

import { getCollection } from "astro:content";
const projects = await getCollection("projects");
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content={description} />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>

    <meta property="og:title" content={title} />
    <meta property="og:type" content="website portfolio" />
    <meta
      property="og:url"
      content="https://hirashiki-rafael-portfolio.netlify.app/"
    />
    <meta property="og:description" content={description} />
    <meta
      property="og:image"
      content="https://ia.media-imdb.com/images/rock.jpg"
    />
    <ViewTransitions />

    <link
      rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css"
    />
    <script
      src="https://cdn.jsdelivr.net/npm/@splidejs/splide@4.1.4/dist/js/splide.min.js"
    ></script>
  </head>

  <body
    class={`grid grid-cols-12 ${
      headerIndex && "clr-bg max-lg:flex max-lg:flex-col-reverse"
    } overflow-y-hidden h-screen`}
  >
    {
      headerIndex && (
        <>
          <Header
            headerIndex={headerIndex}
            class={`relative w-full h-screen col-start-1 col-span-5 clr-bg pt-8 grid grid-cols-8 max-lg:h-auto max-lg:flex-1 max-lg:grid-cols-12 max-lg:bg-transparent`}
          />
          <Main
            projects={projects}
            class={`relative w-full h-fit m-auto col-span-7 css-no-scrollbar max-lg:flex-1`}
          >
            <slot />
          </Main>
        </>
      )
    }

    {
      !headerIndex && (
        <>
          <Header
            headerIndex={headerIndex}
            class={`css-hideHeader max-lg:absolute h-screen col-start-1 col-span-3 max-lg:col-span-3 clr-bg pt-8 grid grid-cols-5 `}
          />
          <Main
            projects={projects}
            class={`css-headermain relative w-full h-screen pb-8 col-span-9 max-lg:col-start-1 max-lg:col-span-full overflow-y-scroll pt-16 css-no-scrollbar grid grid-cols-12`}
          >
            <slot />
          </Main>
        </>
      )
    }

    <!-- <Footer/> -->
    <style is:global>
      :root {
        --accent: 136, 58, 234;
        --accent-light: 224, 204, 250;
        --accent-dark: 49, 10, 101;
        --accent-gradient: linear-gradient(
          45deg,
          rgb(var(--accent)),
          rgb(var(--accent-light)) 30%,
          white 60%
        );

        --clr-bg: #0f2132;
        --clr-bg-glass: #0f2132c0;
        --clr-charchoal: #333333;
        --clr-brand-blue: #00d9f7;
        --clr-brand-orange: #ff9900;
      }

      /* reset  */
      html {
        box-sizing: border-box;
        font-size: 16px;
      }

      *,
      *:before,
      *:after {
        box-sizing: inherit;
      }

      body,
      h1,
      h2,
      h3,
      h4,
      h5,
      h6,
      p,
      ol,
      ul {
        margin: 0;
        padding: 0;
        font-weight: normal;
      }

      ol,
      ul {
        list-style: none;
      }

      img {
        max-width: 100%;
        height: auto;
      }
      /* reset  */

      html,
      body {
        font-family: "Roboto", sans-serif;
        color: var(--clr-charchoal);
      }

      a:hover {
        cursor: pointer;
        color: var(--clr-brand-blue);
        transition: all 0.3s;
      }
      a:active {
        color: var(--clr-bg);
        transition: all 0.2s;
      }

      header {
        width: 100%;
        position: relative;
        z-index: 999;
      }

      #toggleButton {
        z-index: 999;
        transform: rotate(45deg);
      }
      #fa-arrowHeader {
        display: block;
        transition: all 0.5s;
        width: 30px;
        height: 30px;
      }
      .rotate {
        transform: rotate(180deg) !important;
        transition: all 0.5s;
      }

      @media screen and (max-width: 1200px) {
        header {
          width: 50%;
          inset: 0 0 0 0;
          transition: all 0.3s ease-out;
        }
        .css-hideHeader {
          position: absolute;
          inset: 0 0 0 -50%;
          transition: all 0.3s ease-out;
        }
      }
      @media screen and (max-width: 767px) {
        header {
          width: 80%;
        }
        .css-hideHeader {
          inset: 0 0 0 -80%;
        }
      }
      @media screen and (max-width: 420px) {
        header {
          width: 94%;
        }
        .css-hideHeader {
          inset: 0 0 0 -94%;
        }
      }

      code {
        font-family:
          Menlo,
          Monaco,
          Lucida Console,
          Liberation Mono,
          DejaVu Sans Mono,
          Bitstream Vera Sans Mono,
          Courier New,
          monospace;
      }

      .css-headermain {
        grid-template-rows: min-content 1fr;
      }
      .clr-bg {
        background-color: var(--clr-bg);
        color: "white";
      }
      .css-photo_div {
        border-radius: 50%;
        width: fit-content;
      }
      .url-logo-black {
        background-color: black;
        width: 42px;
        height: 42px;
        border-radius: 5px;
        padding: 5px;
        font-size: 26px;
        color: white;
        display: flex;
        justify-content: center;
        align-items: center;
      }
      .url-logo-github {
        font-size: 36px;
      }
      .url-logo {
        background-color: transparent;
        width: 42px;
        height: 42px;
        border-radius: 5px;
        padding: 0;
      }
      .grid-item-ball > span:nth-child(2) {
        display: block;
        width: fit-content;
        margin: auto;
        color: var(--clr-brand-blue);
      }
      .css-glass-bg {
        /* From https://css.glass */
        background: rgba(255, 255, 255, 0.5);
        border-radius: 16px;
        box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
        backdrop-filter: blur(4.8px);
        -webkit-backdrop-filter: blur(4.8px);
        border: 2px solid var(--clr-brand-blue);
        color: var(--clr-bg);
      }
      .css-no-scrollbar {
        -ms-overflow-style: none; /* IE and Edge */
        scrollbar-width: none; /* Firefox */
      }
      .css-no-scrollbar::-webkit-scrollbar {
        display: none;
      } /* Hide scrollbar for IE, Edge, and Firefox */

      @keyframes animateVertical {
        from {
          height: 0;
        }
        to {
          height: 100%;
        }
      }
      @keyframes animateHorizontal {
        from {
          width: 0;
        }
        to {
          width: 100%;
        }
      }
    </style>
  </body>
</html>
